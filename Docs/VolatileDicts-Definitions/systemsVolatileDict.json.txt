
# definition and content of systemsVolatileDict   

# There is an entry for each systemid
{
"<systemid1>": { <properties for manager-1> },
"<systemid2>": { <properties for manager-2> },
...
"<systemidN>": { <properties for manager-N> }
}


# when it is created there is an empty record for each systemid:
{
"<systemid1>": {},
"<systemid2>": {},
...
"<systemidN>": {}
}


# LEGAL properties that may be in systemsVolatileDict:
{
"<systemid>": {
    "IndicatorLED": "<state>",
    "PowerState":   "<enum>",
    "Status": { "State": "<state>", "Health": "<health>"},
    "BootSourceOverrideEnabled": "<Once|Continuous|Disabled>",
    "BootSourceOverrideTarget": "<OneOfTheAllowableValues>",
    "BootSourceOverrideMode": "<UEFI|Legacy>",
    "UefiTargetBootSourceOverride": "<uefiDevicePathString>"
},
...
}
}


# EXAMPLE content for static config: dev112 
{
"Rack1-Block1-Sled1-Node1": {
    "IndicatorLED": "<ledState>",
    "PowerState":  "<powerState>",
    "Status": { "State": "<state>", "Health": "<health>" }
    "BootSourceOverrideEnabled": "Once",
    "BootSourceOverrideTarget": "Pxe"
    },
"Rack1-Block1-Sled2-Node1": {
    "IndicatorLED": "<ledState>",
    "PowerState":  "<powerState>",
    "Status": { "State": "<state>", "Health": "<health>" }
    "BootSourceOverrideEnabled": "Disabled",
    "BootSourceOverrideTarget": "Pxe"
    }
}


# G5 POLL STRATEGY:
#   there is a worker thread for each iDrac system
#   it does GET /redfish/v1/Systems/<systemid> every N seconds and:
#      --updates the volatile properties in systemsVolatileDict[systemid] if they are listed in systemsDb["Volatiles"]:
#        -- "IndicatorLED", "PowerState", "Status"
#      --updates the nonVolatile properties stored in systemsDb[systemid] if they have changed:
#        -- "AssetTag", "HostName", "BiosVersion"
#      --updates equiv volatile properties in chassisVolatileDict[chassisid] 
#        -- we will get Sled powerState from Idracs
#        -- we will get Sled IndicatorLED from Idracs
#        -- we will set Sled Status = node or system status
#      --updates equiv non-volatile properties in chassisDb[chassisid]  if they have changed are are in
#        -- "AssetTag" 
